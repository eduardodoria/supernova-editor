name: CMake Build Matrix

on:
  push:
    branches:
      - '*'
  release:
    types: [published]
    
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TARGET: supernova-editor
  TARGET_SOURCE_DIR: editor

jobs:
  build:
    name: Build for ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: "windows_msvc",
            cc: "cl",
            cxx: "cl",
            generators: "Visual Studio 17 2022"
          }
        - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja"
          }
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            artifact: "macos_clang",
            cc: "clang",
            cxx: "clang++",
            generators: "Ninja"
          }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Download GLFW binaries
        if: startsWith(matrix.config.os, 'windows')
        run: |
          Invoke-WebRequest -Uri "https://github.com/glfw/glfw/releases/download/3.4/glfw-3.4.bin.WIN64.zip" -OutFile "glfw-binaries.zip"
          Expand-Archive -Path "glfw-binaries.zip" -DestinationPath "glfw-binaries"
          echo "GLFW_DIR=$(pwd)\glfw-binaries" >> $GITHUB_ENV

      - name: Install dependencies on Windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version

      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake libglfw3-dev
          ninja --version
          cmake --version
          gcc --version

      - name: Install dependencies on macOS
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake ninja glfw
          ninja --version
          cmake --version
          
      - name: Configure
        shell: bash
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          mkdir build
          mkdir instdir
          cmake \
            -S . \
            -B build \
            -DSUPERSHADER_VERSION:STRING="\"${{ github.event.release.tag_name }}\"" \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir \
            -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"

      - name: Build
        shell: bash
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: cmake --build build --config ${{env.BUILD_TYPE}} --target ${{env.TARGET}}

      - name: Install Strip
        shell: bash
        run: cmake --install build/${{env.TARGET_SOURCE_DIR}} --config ${{env.BUILD_TYPE}} --strip
        
      - name: List directories
        shell: bash
        working-directory: instdir
        run: ls -laR

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.artifact }}
          path: ./instdir/bin/*
          if-no-files-found: error
